{"version":3,"sources":["coins.js","App.js","reportWebVitals.js","index.js"],"names":["Coins","name","image","symbol","price","volume","priceChange","marketCap","className","src","alt","toFixed","App","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","console","log","catch","err","filteredCoins","filter","coin","toLowerCase","includes","type","placeholder","onChange","e","target","value","map","marketcap","market_cap","current_price","price_change_percentage_24h","total_volume","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAyBeA,MArBf,YAAgF,IAA/DC,EAA8D,EAA9DA,KAAMC,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,OAAgBC,GAAiC,EAAzCC,OAAyC,EAAjCD,OAAOE,EAA0B,EAA1BA,YACjD,OAD2E,EAAbC,UAE1D,sBAAKC,UAAU,WAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKC,IAAKP,EAAOQ,IAAI,WACrB,oBAAIF,UAAU,aAAd,SAA4BP,IAC5B,mBAAGO,UAAU,cAAb,SAA4BL,OAC1B,uBACN,sBAAKK,UAAU,WAAf,UACI,oBAAGA,UAAU,YAAb,eAA4BJ,KAC3BE,EAAc,EACb,oBAAGE,UAAU,kBAAb,UAAgCF,EAAYK,QAAQ,GAApD,wCAEA,oBAAGH,UAAU,oBAAb,UAAkCF,EAAYK,QAAQ,GAAtD,gCC2CHC,MArDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,KAIbC,qBAAU,WACRC,IAAMC,IAAN,wJAAkKC,MAAK,SAACC,GACpKP,EAASO,EAAIC,MACbC,QAAQC,IAAIH,EAAIC,SACfG,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,QAC/B,IAGH,IAIMC,EAAgBd,EAAMe,QAAO,SAACC,GAAD,OACjCA,EAAK7B,KAAK8B,cAAcC,SAAShB,EAAOe,kBAG1C,OACE,qBAAKvB,UAAU,MAAf,SACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,YAAd,8CACA,+BACE,uBACEyB,KAAK,OACLC,YAAY,QACZ1B,UAAU,aACV2B,SAlBS,SAACC,GACpBnB,EAAUmB,EAAEC,OAAOC,eAqBdV,EAAcW,KAAI,SAACT,GAClB,OACE,cAAC,EAAD,CAEE7B,KAAM6B,EAAK7B,KACXC,MAAO4B,EAAK5B,MACZC,OAAQ2B,EAAK3B,OACbqC,UAAWV,EAAKW,WAChBrC,MAAO0B,EAAKY,cACZpC,YAAawB,EAAKa,4BAClBtC,OAAQyB,EAAKc,cAPRd,EAAKe,aChCTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c3abec15.chunk.js","sourcesContent":["<script src=\"https://kit.fontawesome.com/yourcode.js\" crossorigin=\"anonymous\"></script>\r\n\r\n\r\n\r\nfunction Coins({ name, image, symbol, volume, price, priceChange, marketCap }) {\r\n    return (\r\n        <div className=\"coin-row\">\r\n            <div className=\"coin\">\r\n                <img src={image} alt=\"crypto\" />\r\n                <h2 className=\"coinnameh2\">{name}</h2>\r\n                <p className=\"coin-symbol\">{symbol}</p>\r\n            </div><br/>\r\n            <div className=\"coindata\">\r\n                <p className=\"coinprice\"> ${price}</p>\r\n                {priceChange < 0 ?\r\n                 (<p className=\"coinpercent red\">{priceChange.toFixed(2)}% oranda Düşüşte. </p>\r\n                ) : (\r\n                  <p className=\"coinpercent green\">{priceChange.toFixed(2)}% oranda Artmakta. </p>\r\n                )}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Coins;","import { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Coins from './coins';\n\n\n\nfunction App() {\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false&price_change_percentage=24h`).then((res) => {\n        setCoins(res.data);\n        console.log(res.data);\n      }).catch((err) => console.log(err));\n  }, []);\n\n\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const filteredCoins = coins.filter((coin) =>\n    coin.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <div className=\"App\">\n      <div className=\"coin-app\">\n        <div className=\"coinSearch\">\n          <h1 className=\"coin-text\">Güncel Kripto Piyasaları</h1>\n          <form>\n            <input\n              type=\"text\"\n              placeholder=\"Arama\"\n              className=\"coin-input\"\n              onChange={handleChange}\n            />\n          </form>\n        </div>\n        {filteredCoins.map((coin) => {\n          return (\n            <Coins\n              key={coin.id}\n              name={coin.name}\n              image={coin.image}\n              symbol={coin.symbol}\n              marketcap={coin.market_cap}\n              price={coin.current_price}\n              priceChange={coin.price_change_percentage_24h}\n              volume={coin.total_volume}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}